&PetSchema Pet:
  required:
    - name
    - photoUrls
  type: object
  properties:
    id:
      type: integer
      format: int64
      example: 10
    name:
      type: string
      example: doggie
    category:
      $ref: '#/components/schemas/Category'
    photoUrls:
      type: array
      xml:
        wrapped: true
      items:
        type: string
        xml:
          name: photoUrl
    tags:
      type: array
      xml:
        wrapped: true
      items:
        $ref: '#/components/schemas/Tag'
    status:
      type: string
      description: pet status in the store
      enum:
        - available
        - pending
        - sold
Category:
  type: object
  properties:
    id:
      type: integer
      format: int64
      example: 1
    name:
      type: string
      example: Dogs
Tag:
  type: object
  properties:
    id:
      type: integer
      format: int64
    name:
      type: string
  xml:
    name: tag

name: treasury-api
category: Pet
prefix: treasury
version: v1
routes:
- path: /pet
  method: post
  description: Add a new pet to the store
  operationId: addPet
  contentType: application/json
  requestSchema: *PetSchema
  responseSchema: *PetSchema

